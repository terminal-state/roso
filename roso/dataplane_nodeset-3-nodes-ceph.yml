apiVersion: dataplane.openstack.org/v1beta1
kind: OpenStackDataPlaneNodeSet
metadata:
  name: openstack-edpm
  namespace: openstack
spec:
  configMaps:
  - reserved-memory-nova
  - ceph-nova
  env:
  - name: ANSIBLE_FORCE_COLOR
    value: "True"
  networkAttachments:
  - ctlplane
    #  - internalapi
    #- storage
    #- tenant
    #- storagemgmt
  nodeTemplate:
    extraMounts:
      - extraVolType: Ceph
        volumes:
        - name: ceph
          secret:
            secretName: ceph-conf-files
        mounts:
        - name: ceph
          mountPath: "/etc/ceph"
          readOnly: true
      - extraVolType: Logs
        volumes:
        - name: ansible-logs
          persistentVolumeClaim:
            claimName: ansible-logs
        mounts:
        - name: ansible-logs
          mountPath: "/runner/artifacts"
    ansible:
      ansiblePort: 22
      ansibleUser: root
      ansibleVarsFrom:
        - secretRef:
            name: redhat-registry-secret
      ansibleVars:
        ctlplane_dns_nameservers:
          - 192.168.58.101
        nodeset_networks:
          - external
          - ctlplane
          - internalapi
          - storage
          - tenant
          - storagemgmt
        edpm_network_config_os_net_config_options: "--cleanup"
        edpm_bootstrap_command: |
        edpm_bootstrap_network_resolvconf_update: true
        ctlplane_dns_nameservers:
          - 192.168.58.101
        registry_url: "quay.io/podified-antelope-centos9"
        image_tag: "current-podified"
        edpm_required_groups:
          - name: hugetlbfs
        edpm_ceph_hci_pre_enabled_services:
          - ceph_mon
          - ceph_mgr
          - ceph_osd
          - ceph_rgw
          - ceph_nfs
          - ceph_rgw_frontend
          - ceph_nfs_frontend
        edpm_fips_mode: check
        edpm_iscsid_image: "{{ registry_url }}/openstack-iscsid:{{ image_tag }}"
        edpm_logrotate_crond_image: "{{ registry_url }}/openstack-cron:{{ image_tag }}"
        edpm_network_config_os_net_config_mappings:
          edpm-compute-0:
            nic1: 5c:ba:2c:8c:f3:00
            nic2: 5c:ba:2c:8c:f3:08
          edpm-compute-1:
            nic1: 5c:ba:2c:8c:f7:00
            nic2: 5c:ba:2c:8c:f7:08
          edpm-compute-2:
            nic1: 5c:ba:2c:8d:05:d0
            nic2: 5c:ba:2c:8d:05:d8
        edpm_network_config_template: |
          ---
          {% set mtu_list = [ctlplane_mtu] %}
          {% for network in nodeset_networks %}
          {{ mtu_list.append(lookup('vars', networks_lower[network] ~ '_mtu')) }}
          {% endfor %}

          {% set min_viable_mtu = mtu_list | max %}
          network_config:
          - type: interface
            name: ens1f0np0
            use_dhcp: false
            defroute: false
            mtu: 1500

          - type: ovs_bridge
            name: {{ neutron_physical_bridge_name }}
            mtu: {{ min_viable_mtu }}
            use_dhcp: false
            members:
            - type: interface
              name: nic2
              mtu: {{ min_viable_mtu }}
              primary: true
              use_dhcp: false
              defroute: false

          - type: vlan
            device: {{ neutron_physical_bridge_name }}
            vlan_id: {{ ctlplane_vlan_id }}
            mtu: {{ ctlplane_mtu }}
            addresses:
              - ip_netmask: {{ ctlplane_ip }}/{{ ctlplane_cidr }}
            routes: {{ ctlplane_host_routes }}
            dns_servers: {{ ctlplane_dns_nameservers }}

          - type: interface
            name: nic1
            use_dhcp: false
            defroute: true
            mtu: 1500
            addresses:
              - ip_netmask: {{ lookup('vars', networks_lower['external'] ~ '_ip') }}/{{ lookup('vars', networks_lower['external'] ~ '_cidr') }}
            routes:
              - ip_netmask: 0.0.0.0/0
                next_hop: {{ lookup('vars', networks_lower['external'] ~ '_gateway') }}

          {% for network in nodeset_networks if network != 'external' %}
          - type: vlan
            device: {{ neutron_physical_bridge_name }}
            vlan_id: {{ lookup('vars', networks_lower[network] ~ '_vlan_id') }}
            mtu: {{ lookup('vars', networks_lower[network] ~ '_mtu') }}
            addresses:
              - ip_netmask: {{ lookup('vars', networks_lower[network] ~ '_ip') }}/{{ lookup('vars', networks_lower[network] ~ '_cidr') }}
            routes: {{ lookup('vars', networks_lower[network] ~ '_host_routes') }}
          {% endfor %}

        edpm_neutron_metadata_agent_image: "{{ registry_url }}/openstack-neutron-metadata-agent-ovn:{{ image_tag }}"
        edpm_nodes_validation_validate_controllers_icmp: false
        edpm_nodes_validation_validate_gateway_icmp: false
        edopm_selinux_mode: enforcing
        edpm_sshd_configure_firewall: true
        edpm_sshd_allowed_ranges: ['192.168.0.0/16']
        enable_debug: true
        gather_facts: true
        image_tag: current-podified
        neutron_physical_bridge_name: br-ex
        neutron_public_interface_name: eno5np0
        service_net_map:
          nova_api_network: internalapi
          nova_libvirt_network: internalapi
        storagemgmt_cidr: "24"
        storagemgmt_host_routes: []

        storagemgmt_mtu: 9000
        storage_mtu: 9000
        ctlplane_mtu: 1500
        internalapi_mtu: 1500
        tenant_mtu: 1500

        ctlplane_vlan_id: 30
        internalapi_vlan_id: 40
        storage_vlan_id: 60
        storagemgmt_vlan_id: 70
        tenant_vlan_id: 50
        external_cidr: 24
        external_gateway: 192.168.56.254
        timesync_ntp_servers:
        - hostname: pool.ntp.org
    ansibleSSHPrivateKeySecret: dataplane-ansible-ssh-private-key-secret
    managementNetwork: null
  nodes:
    edpm-compute-0:
      hostName: edpm-compute-0
      networks:
      - name: external
        fixedIP: 192.168.56.25
        subnetName: subnet1
      - name: ctlplane
        subnetName: subnet1
        fixedIP: 192.168.58.25
      - name: internalapi
        subnetName: subnet1
        fixedIP: 192.168.57.25
      - name: storage
        subnetName: subnet1
        fixedIP: 192.168.59.25
      - name: tenant
        subnetName: subnet1
        fixedIP: 192.168.60.25
      - name: storagemgmt
        subnetName: subnet1
        fixedIP: 192.168.61.25
      ansible:
        ansibleHost: 192.168.56.25
        ansibleUser: root
        ansibleVars:
          fqdn_internal_api: mbes005.imlab.priv
    edpm-compute-1:
      hostName: edpm-compute-1
      networks:
      - name: external
        fixedIP: 192.168.56.26
        subnetName: subnet1
      - name: ctlplane
        fixedIP: 192.168.58.26
        subnetName: subnet1
      - name: internalapi
        fixedIP: 192.168.57.26
        subnetName: subnet1
      - name: storage
        fixedIP: 192.168.59.26
        subnetName: subnet1
      - name: tenant
        fixedIP: 192.168.60.26
        subnetName: subnet1
      - name: storagemgmt
        fixedIP: 192.168.61.26
        subnetName: subnet1
      ansible:
        ansibleHost: 192.168.56.26
        ansibleUser: root
        ansibleVars:
          fqdn_internal_api: mbes006.imlab.priv
    edpm-compute-2:
      hostName: edpm-compute-2
      networks:
      - name: external
        fixedIP: 192.168.56.27
        subnetName: subnet1
      - name: ctlplane
        fixedIP: 192.168.58.27
        subnetName: subnet1
      - name: internalapi
        fixedIP: 192.168.57.27
        subnetName: subnet1
      - name: storage
        fixedIP: 192.168.59.27
        subnetName: subnet1
      - name: tenant
        fixedIP: 192.168.60.27
        subnetName: subnet1
      - name: storagemgmt
        fixedIP: 192.168.61.27
        subnetName: subnet1
      ansible:
        ansibleHost: 192.168.56.27
        ansibleUser: root
        ansibleVars:
          fqdn_internal_api: mbes007.imlab.priv
  preProvisioned: true
  services:
  - bootstrap
  - configure-network
  - validate-network
  - install-os
  - ceph-hci-pre
  - configure-os
  - ssh-known-hosts
  - run-os
  - reboot-os
  - install-certs
  - ceph-client
  - ovn
  - neutron-metadata
  - libvirt
  - nova-custom-ceph
    #- telemetry
